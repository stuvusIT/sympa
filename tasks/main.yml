---
## Sympa configuration main tasks file

- name: Add Debian testing repo
  apt_repository:
    repo: deb http://deb.debian.org/debian/ testing main

- name: Pin Debian testing repo
  copy:
    content: |
      Package: *
      Pin: release a=testing
      Pin-Priority: -1
    dest: /etc/apt/preferences.d/limit-testing

- name: Check that "debconf" and "debconf-utils" are installed
  apt:
    name:
    - debconf
    - debconf-utils
    state: latest

- name: MySQL/MariaDB configuration
  include_tasks: mysql.yml
  when: sympa_db_type == 'MySQL' or sympa_db_type == 'mysql'
  tags: mysql

- name: PostgreSQL configuration
  include_tasks: postgresql.yml
  when: sympa_db_type == 'PostgreSQL' or sympa_db_type == 'Pg'
  tags: postgresql

- name: Set debconf options for sympa
  debconf:
    name: "{{ item.name }}"
    question: "{{ item.question }}"
    value: "{{ item.value }}"
    vtype: "{{ item.vtype }}"
  loop:
      ## set the database type
  - { name: 'sympa', question: 'sympa/database-type', value: '{{ sympa_db_type }}' , vtype: select }
      ## This Ansible role configures the database, not dbconfig at sympa package installation 
  - { name: 'sympa', question: 'sympa/dbconfig-install', value: 'false' , vtype: boolean }
      ## Set the sympa database name
  - { name: 'sympa', question: 'sympa/db/dbname', value: '{{ sympa_db_name }}' , vtype: string }
      ## Set the sympa database user
  - { name: 'sympa', question: 'sympa/db/app-user', value: '{{ sympa_db_user }}' , vtype: string }
      ## Use the localhost for database (and not a distant host to define)
  - { name: 'sympa', question: 'sympa/remote/host', value: 'localhost' , vtype: select }
      ## Set the webserver type
  - { name: 'sympa', question: 'wwsympa/webserver_type', value: '{{ sympa_webserver_type }}' , vtype: select }


- name: Create sympa dir
  file:
    path: "/etc/sympa/sympa"
    state: directory

- name: Create sympa.conf
  template:
    src: sympa.conf.j2
    dest: /etc/sympa/sympa/sympa.conf
    mode: 0600
  notify:
    - Reload sympa config
    - Restart sympa

- name: Install packages
  apt:
    name:
      - sympa
    state: latest
    default_release: testing

- name: Fix permissions
  file:
    path: "/etc/sympa/{{ item }}"
    owner: sympa
    group: sympa
  loop:
    - ""
    - "sympa/"
    - "sympa/sympa.conf"

- name: Create ldap_alias_manager.conf
  template:
    src: ldap_alias_manager.conf.j2
    dest: /etc/sympa/ldap_alias_manager.conf
    owner: sympa
    group: sympa
    mode: 0600
  when: sympa_ldap_alias_manager_conf is defined

- name: Create ldap_alias_entry.tt2
  copy:
    content: "{{ sympa_ldap_alias_entry }}"
    dest: /etc/sympa/ldap_alias_entry.tt2
    owner: sympa
    group: sympa
    mode: 0600
  when: sympa_ldap_alias_entry is defined

- name: Create folders for list templates
  file:
    path: "/etc/sympa/create_list_templates/{{ item.name }}"
    state: directory
    mode: 0750
    owner: sympa
    group: sympa
  loop: "{{ sympa_template_lists }}"

- name: Create comment.tt2 for list templates
  copy:
    content: "{{ item.config }}"
    dest: "/etc/sympa/create_list_templates/{{ item.name }}/config.tt2"
    owner: sympa
    group: sympa
    mode: 0600
  loop: "{{ sympa_template_lists }}"

- name: Create comment.tt2 for list templates
  copy:
    content: "{{ item.comment }}"
    dest: "/etc/sympa/create_list_templates/{{ item.name }}/comment.tt2"
    owner: sympa
    group: sympa
    mode: 0600
  loop: "{{ sympa_template_lists }}"

- name: Disable default templates
  lineinfile:
    path: /usr/share/sympa/default/create_list.conf
    line: "{{ item }} hidden"
  when: not sympa_show_default_templates
  loop:
    - hotline
    - news-letter
    - confidential
    - discussion_list
    - html-news-letter
    - intranet_list
    - private_working_group
    - public_web_forum

- name: Enable default templates
  lineinfile:
    path: /usr/share/sympa/default/create_list.conf
    line: '{{ item }} hidden'
    state: absent
  when: sympa_show_default_templates
  loop:
    - confidential
    - discussion_list
    - html-news-letter
    - intranet_list
    - private_working_group
    - public_web_forum
    - hotline
    - news-letter

- name: Create datasources
  copy:
    content: "{{ item.content }}"
    dest: "/etc/sympa/data_sources/{{ item.name }}.incl"
    owner: sympa
    group: sympa
    mode: 0600
  loop: "{{ sympa_data_sources }}"
  when: sympa_data_sources is defined

- name: Create auth.conf
  template:
    src: auth.conf.j2
    dest: /etc/sympa/auth.conf
    owner: sympa
    group: sympa
    mode: 0600
  notify: Restart sympa

- name: Create topics.conf
  template:
    src: topics.conf.j2
    dest: /etc/sympa/topics.conf
    owner: sympa
    group: sympa
    mode: 0600
  notify: Restart sympa

- name: Add systemd unit for wwsympa fcgi socket
  template:
    src: wwsympa.socket.j2
    dest: /etc/systemd/system/wwsympa.socket
    owner: root
    group: root
    mode: 0644
  notify:
    - Reload daemon and restart wwsympa service

- name: Add systemd unit for wwsympa fcgi service
  template:
    src: wwsympa.service.j2
    dest: /etc/systemd/system/wwsympa.service
    owner: root
    group: root
    mode: 0644
  notify:
    - Reload daemon and restart wwsympa socket

- meta: flush_handlers

- name: Enable wwsympa service now
  service:
    name: wwsympa
    enabled: True
    state: started

- name: Add cron job to reload config regularly
  become_user: sympa
  cron:
    name: "sympa_reload_conf"
    minute: "0"
    hour: "2"
    job: "/usr/lib/sympa/bin/sympa.pl --reload_list_config"

...
